@using BeyondTheTutor.Models.TimeSheetModels
@model TutorTimeSheetCustomModel
@{
    Dictionary<int, string> d_days = new Dictionary<int, string>();
}


    <body class="wou-silver-bg">
        <div class="ui one column center aligned stackable page grid">
            <br />
            @if (ViewBag.Error != null)
            {
                <div class="ui sixteen wide column" style="text-align: center;">
                    <div class="ui red message" style="text-align: center;">
                        <B>@ViewBag.Error</B>
                    </div>
                </div>
            }

            <table class="ui striped compact table table-schedule"  style="text-align: center;">
                <thead>
                    <tr>
                        <th colspan="3">
                            @using (Html.BeginForm("Index", "TimeSheets", FormMethod.Get))
                            {
                                <div class="ui fluid action input">
                                    @if (ViewBag.searched != null)
                                    {
                                        <input type="text" style="color: #db0a29" value="@ViewBag.searched" name="search" id="search" placeholder="@ViewBag.Placeholder">
                                    }
                                    else
                                    {
                                        <input type="text" style="color: #db0a29" name="search" id="search" placeholder="@ViewBag.Placeholder">
                                    }
                                    <button class="ui button" style="        background-color: #db0a29; color: white;">Search</button>
                                </div>
                            }
                        </th>
                    </tr>
                    <tr>
                        <th colspan="3" style="text-align: center;">
                            @using (Html.BeginForm("Create", "Days", FormMethod.Get))
                            {
                                <button class="ui button" style="background-color: #084b00; color: white;">Create a TimeSheet</button>
                            }
                        </th>
                    </tr>
                    <tr>
                        <th>Month</th>
                        <th>Year</th>
                        <th>Days</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var ts in Model.TimeSheets)
                    {
                        <tr>

                            <td>@Model.months[ts.Month]</td>
                            <td>@ts.Year</td>
                            <td>
                                <select onchange="location = this.value;" class="ui scrolling dropdown form-control">
                                    <option value="">Select a day</option>
                                    @{
                                        var days = ts.Days.Where(d => d.TimeSheetID == ts.ID);
                                        d_days.Clear();
                                        //foreach (var day in days) { d_days.Add(day.On, Model.days[day.ID]); }
                                        foreach (var day in days)
                                        {
                                            <option value="/WorkHours/Index/@day.ID">@Model.days[day.On]</option>
                                        }
                                    }
                                    <option style="color: green; font-weight: bold;" value=""><b>Add Day</b></option>
                                </select>
                            </td>
                        </tr>
                    }
                </tbody>

            </table>
        </div>
    </body>








