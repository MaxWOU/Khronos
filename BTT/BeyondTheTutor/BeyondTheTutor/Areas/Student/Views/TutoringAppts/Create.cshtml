@model BeyondTheTutor.Models.TutoringAppt

@{ ViewBag.Status = "Requested";
    ViewBag.Type = "In-Person"; }

<body class="wou-silver-bg">
    <div class="ui one column stackable page grid">
        <div class="ui one column stackable page grid">
            <div class="ui yellow message schedule">
                <i class="close icon"></i>Select a date and time range for your tutoring session.
                Then select the estimated length for your session.<br />
                Start Range & End Range indicates you are available at any time within that range.
            </div>
        </div>
        <div class="ui form attached fluid segment">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.Hidden("Status", (object)ViewBag.Status)
                @Html.Hidden("TypeOfMeeting", (object)ViewBag.Type)
                @Html.Hidden("StudentID", (object)ViewBag.CurrentStudentID)
                <div class="ui attached message schedule">
                    <div class="header">
                        Welcome to session requests!
                    </div>
                    <p>Fill out the form below to request a tutoring session.</p>
                </div>
                <form>
                    <div class="five fields">
                        <div class="field">
                            <h4>Date</h4>
                            @Html.Editor("Date", null, new { htmlAttributes = new { @type = "date", @class = "form-control" } })
                        </div>
                        <div class="field">
                            <h4>Start Range</h4>
                            <div class="field">
                                @Html.DropDownListFor(m => m.StartTime, new SelectListItem[] {
                                    new SelectListItem() {Text = "9:00 AM", Value="9:00 AM"},
                                    new SelectListItem() {Text = "9:30 AM", Value="9:30 AM"},
                                    new SelectListItem() {Text = "10:00 AM", Value="10:00 AM"},
                                    new SelectListItem() {Text = "10:30 AM", Value="10:30 AM"},
                                    new SelectListItem() {Text = "11:00 AM", Value="11:00 AM"},
                                    new SelectListItem() {Text = "11:30 AM", Value="11:30 AM"},
                                    new SelectListItem() {Text = "12:00 PM", Value="12:00 PM"},
                                    new SelectListItem() {Text = "12:30 PM", Value="12:30 PM"},
                                    new SelectListItem() {Text = "1:00 PM", Value="1:00 PM"},
                                    new SelectListItem() {Text = "1:30 PM", Value="1:30 PM"},
                                    new SelectListItem() {Text = "2:00 PM", Value="2:00 PM"},
                                    new SelectListItem() {Text = "2:30 PM", Value="2:30 PM"},
                                    new SelectListItem() {Text = "3:00 PM", Value="3:00 PM"},
                                    new SelectListItem() {Text = "3:30 PM", Value="3:30 PM"},
                                    new SelectListItem() {Text = "4:00 PM", Value="4:00 PM"},
                                    new SelectListItem() {Text = "4:30 PM", Value="4:30 PM"},
                                    new SelectListItem() {Text = "5:00 PM", Value="5:00 PM"},
                                    new SelectListItem() {Text = "5:30 PM", Value="5:30 PM"},
                                    new SelectListItem() {Text = "6:00 PM", Value="6:00 PM"},
                                    new SelectListItem() {Text = "6:30 PM", Value="6:30 PM"}
                                 }, "Select", htmlAttributes: new { @class = "ui selection dropdown form-control" })
                                @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="field">
                            <h4>End Range</h4>
                            <div class="field">
                                @Html.DropDownListFor(m => m.EndTime, new SelectListItem[]{
                                    new SelectListItem() {Text = "9:00 AM", Value="9:00 AM"},
                                    new SelectListItem() {Text = "9:30 AM", Value="9:30 AM"},
                                    new SelectListItem() {Text = "10:00 AM", Value="10:00 AM"},
                                    new SelectListItem() {Text = "10:30 AM", Value="10:30 AM"},
                                    new SelectListItem() {Text = "11:00 AM", Value="11:00 AM"},
                                    new SelectListItem() {Text = "11:30 AM", Value="11:30 AM"},
                                    new SelectListItem() {Text = "12:00 PM", Value="12:00 PM"},
                                    new SelectListItem() {Text = "12:30 PM", Value="12:30 PM"},
                                    new SelectListItem() {Text = "1:00 PM", Value="1:00 PM"},
                                    new SelectListItem() {Text = "1:30 PM", Value="1:30 PM"},
                                    new SelectListItem() {Text = "2:00 PM", Value="2:00 PM"},
                                    new SelectListItem() {Text = "2:30 PM", Value="2:30 PM"},
                                    new SelectListItem() {Text = "3:00 PM", Value="3:00 PM"},
                                    new SelectListItem() {Text = "3:30 PM", Value="3:30 PM"},
                                    new SelectListItem() {Text = "4:00 PM", Value="4:00 PM"},
                                    new SelectListItem() {Text = "4:30 PM", Value="4:30 PM"},
                                    new SelectListItem() {Text = "5:00 PM", Value="5:00 PM"},
                                    new SelectListItem() {Text = "5:30 PM", Value="5:30 PM"},
                                    new SelectListItem() {Text = "6:00 PM", Value="6:00 PM"},
                                    new SelectListItem() {Text = "6:30 PM", Value="6:30 PM"}
                                 }, "Select", htmlAttributes: new { @class = "ui selection dropdown form-control" })
                                @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="field">
                            <h4>Session Length</h4>
                            <div class="field">
                                <select class="ui selection dropdown" id="Length" name="Length">
                                    <option value="" disabled selected>Select</option>
                                    <option type="text" value="30 minutes">30 minutes</option>
                                    <option type="text" value="1 hour">1 hour</option>
                                    <option type="text" value="1 hour 30 minutes">1 hour 30 minutes</option>
                                    <option type="text" value="2 hours">2 hours</option>
                                    <option type="text" value="2+ hours">2+ hours</option>
                                </select>
                            </div>
                            @Html.ValidationMessageFor(model => model.Length, "", new { @class = "text-danger" })
                        </div>
                        <div class="field">
                            <h4>Class</h4>
                            @Html.DropDownList("ClassID", null, "Select", htmlAttributes: new { @class = "ui selection dropdown form-control" })
                            @Html.ValidationMessageFor(model => model.ClassID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <button class="fluid ui button schedule">Submit Request</button>
                </form>
            }
        </div>
    </div>
</body>

@section scripts
{
    <script src="~/Scripts/main.js"></script>
}